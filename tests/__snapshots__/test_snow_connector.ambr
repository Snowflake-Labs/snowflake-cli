# serializer version: 1
# name: test_create_procedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  CREATE OR REPLACE  PROCEDURE nameValue(string a, variant b)
           RETURNS returnTypeValue
           LANGUAGE PYTHON
           RUNTIME_VERSION=3.8
           IMPORTS=('import1, import2')
           HANDLER='handlerValue'
           PACKAGES=('aaa','bbb')
           EXECUTE AS CALLER;
  
  
  describe PROCEDURE nameValue(a, b);
  '''
# ---
# name: test_describe_procedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  desc PROCEDURE signatureValue;
  '''
# ---
# name: test_set_procedure_comment
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  alter PROCEDURE signatureValue SET COMMENT = $$commentValue$$;
  '''
# ---
# name: test_upload_file_to_stage[namedStageValue-False]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  
  
  put file://file_pathValue @namedStageValuepathValue auto_compress=false parallel=4 overwrite=overwriteValue;
  '''
# ---
# name: test_upload_file_to_stage[namedStageValue-True]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  
  create stage if not exists namedStageValue comment='deployments managed by snowcli';
  
  
  put file://file_pathValue @namedStageValuepathValue auto_compress=false parallel=4 overwrite=overwriteValue;
  '''
# ---
# name: test_upload_file_to_stage[snow://embeddedStageValue-False]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  
  
  put file://file_pathValue snow://embeddedStageValuepathValue auto_compress=false parallel=4 overwrite=overwriteValue;
  '''
# ---
# name: test_upload_file_to_stage[snow://embeddedStageValue-True]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  
  create stage if not exists snow://embeddedStageValue comment='deployments managed by snowcli';
  
  
  put file://file_pathValue snow://embeddedStageValuepathValue auto_compress=false parallel=4 overwrite=overwriteValue;
  '''
# ---
