# serializer version: 1
# name: test_create_procedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  CREATE OR REPLACE  PROCEDURE nameValue(string a, variant b)
           RETURNS returnTypeValue
           LANGUAGE PYTHON
           RUNTIME_VERSION=3.8
           IMPORTS=('import1, import2')
           HANDLER='handlerValue'
           PACKAGES=('aaa','bbb')
           EXECUTE AS CALLER;
  
  
  describe PROCEDURE nameValue(a, b);
  '''
# ---
# name: test_create_streamlit
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  create streamlit nameValue
    
    MAIN_FILE = 'fileValue'
    QUERY_WAREHOUSE = warehouseValue;
  
  show streamlits;
  describe streamlit nameValue;
  
  alter streamlit nameValue checkout;
  '''
# ---
# name: test_create_streamlit_from_stage
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  create streamlit nameValue
    FROM @stageValue
    MAIN_FILE = 'fileValue'
    QUERY_WAREHOUSE = warehouseValue;
  
  show streamlits;
  describe streamlit nameValue;
  
  alter streamlit nameValue checkout;
  '''
# ---
# name: test_deploy_streamlit
  '''
  use role roleValue;
  
  use database databaseValue;
  use schema schemaValue;
  
  CALL SYSTEM$GENERATE_STREAMLIT_URL_FROM_NAME('nameValue');
  '''
# ---
# name: test_describe_procedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  desc PROCEDURE signatureValue;
  '''
# ---
# name: test_describe_streamlit
  '''
  use role roleValue;
  
  use database databaseValue;
  use schema schemaValue;
  
  CALL SYSTEM$GENERATE_STREAMLIT_URL_FROM_NAME('nameValue');
  '''
# ---
# name: test_drop_procedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  drop procedure signatureValue;
  '''
# ---
# name: test_drop_streamlit
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  drop streamlit nameValue;
  '''
# ---
# name: test_execute_procedure
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  call procedureValue;
  '''
# ---
# name: test_list_procedures
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  show user procedures like 'likeValue';
  select "name", "created_on", "arguments" from table(result_scan(last_query_id()));
  '''
# ---
# name: test_list_streamlits
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  show streamlits;
  '''
# ---
# name: test_set_procedure_comment
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  alter PROCEDURE signatureValue SET COMMENT = $$commentValue$$;
  '''
# ---
# name: test_share_streamlit
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  grant usage on streamlit nameValue to role to_roleValue;
  '''
# ---
# name: test_upload_file_to_stage[namedStageValue-False]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  
  
  put file://file_pathValue @namedStageValuepathValue auto_compress=false parallel=4 overwrite=overwriteValue;
  '''
# ---
# name: test_upload_file_to_stage[namedStageValue-True]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  
  create stage if not exists namedStageValue comment='deployments managed by snowcli';
  
  
  put file://file_pathValue @namedStageValuepathValue auto_compress=false parallel=4 overwrite=overwriteValue;
  '''
# ---
# name: test_upload_file_to_stage[snow://embeddedStageValue-False]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  
  
  put file://file_pathValue snow://embeddedStageValuepathValue auto_compress=false parallel=4 overwrite=overwriteValue;
  '''
# ---
# name: test_upload_file_to_stage[snow://embeddedStageValue-True]
  '''
  use role roleValue;
  use warehouse warehouseValue;
  use database databaseValue;
  use schema schemaValue;
  
  
  create stage if not exists snow://embeddedStageValue comment='deployments managed by snowcli';
  
  
  put file://file_pathValue snow://embeddedStageValuepathValue auto_compress=false parallel=4 overwrite=overwriteValue;
  '''
# ---
