# serializer version: 1
# name: test_create_function
  '''
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  
  
  create stage if not exists MockDatabase.MockSchema.deployments comment='deployments managed by snowcli';
  
  
  put file:///var/folders/1b/6450dkj56wx01kj9ls9vj6y00000gn/T/tmpcu6daye4/tmp4zrntixb @MockDatabase.MockSchema.deployments/functionnamea_string_b_number--overwrite auto_compress=false parallel=4 overwrite=False;
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  CREATE  FUNCTION functionName(a string, b number)--overwrite
           RETURNS table(variant)
           LANGUAGE PYTHON
           RUNTIME_VERSION=3.8
           IMPORTS=('@MockDatabase.MockSchema.deployments/functionnamea_string_b_number--overwrite/app.zip')
           HANDLER='main.py:app'
           PACKAGES=();
  describe function functionName(string, number)--overwrite;
  '''
# ---
# name: test_describe_function_from_name
  '''
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  desc FUNCTION functionName(string,;
  '''
# ---
# name: test_describe_function_from_signature
  '''
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  desc FUNCTION functionName(int, string, variant);
  '''
# ---
# name: test_drop_function_from_name
  '''
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  drop function functionName(string,;
  '''
# ---
# name: test_drop_function_from_signature
  '''
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  drop function functionName(int, string, variant);
  '''
# ---
# name: test_execute_function
  '''
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  select functionName(42, 'string');
  '''
# ---
# name: test_list_function
  '''
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  show user functions like 'foo_bar%';
  select "name", "created_on", "arguments", "language" from table(result_scan(last_query_id()));
  '''
# ---
# name: test_update_function
  '''
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  
  
  create stage if not exists MockDatabase.MockSchema.deployments comment='deployments managed by snowcli';
  
  
  put file:///var/folders/1b/6450dkj56wx01kj9ls9vj6y00000gn/T/tmpa17n_c85/tmpzrenj9z_ @MockDatabase.MockSchema.deployments/functionnamea_string_b_number--replace-always auto_compress=false parallel=4 overwrite=False;
  use role mockRole;
  use warehouse MockWarehouse;
  use database MockDatabase;
  use schema MockSchema;
  CREATE  FUNCTION functionName(a string, b number)--replace-always
           RETURNS table(variant)
           LANGUAGE PYTHON
           RUNTIME_VERSION=3.8
           IMPORTS=('@MockDatabase.MockSchema.deployments/functionnamea_string_b_number--replace-always/app.zip')
           HANDLER='main.py:app'
           PACKAGES=();
  describe function functionName(string, number)--replace-always;
  '''
# ---
